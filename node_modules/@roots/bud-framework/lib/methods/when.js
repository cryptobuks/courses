import { isArray, isFunction } from '@roots/bud-support/lodash-es';
/**
 * Executes a function if a given test is `true`.
 *
 * @remarks
 * - The first parameter is the conditional check.
 * - The second parameter is the function to run if `true`.
 * - The third parameter is optional; executed if the conditional is not `true`.
 *
 * @example
 * Only produce a vendor bundle when running in `production`:
 *
 * ```js
 * bud.when(bud.isProduction, () => bud.vendor())
 * ```
 *
 * @example
 * Use `eval` sourcemap in development mode and `hidden-source-map` in production:
 *
 * ```js
 * bud.when(
 *   bud.isDevelopment,
 *   () => bud.devtool('eval'),
 *   () => bud.devtool('hidden-source-map'),
 * )
 * ```
 *
 * @public
 */
export function when(test, trueCase, falseCase) {
    const ctx = this;
    const callTestCase = value => {
        const unwrapped = ctx.maybeCall(value);
        const iterableValue = isArray(unwrapped) ? unwrapped : [unwrapped];
        return iterableValue.every(v => (isFunction(v) ? ctx.maybeCall(v) : v) === true);
    };
    const callMatchedCase = (value) => (isArray(value) ? value : [value])
        .filter(v => isFunction(v))
        .map(value => ctx.tap(value));
    callMatchedCase(callTestCase(test) ? trueCase : falseCase);
    return this;
}
//# sourceMappingURL=when.js.map