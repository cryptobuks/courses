import * as Base from '@roots/bud-framework/services/api';
/**
 * API service
 *
 * @remarks
 * Binds facade methods to the framework and provides a way to list them,
 * call them, and otherwise manipulate them.
 *
 * @public
 */
export declare class Api extends Base.Service {
    /**
     * Service label
     *
     * @public
     */
    static label: string;
    /**
     * `bootstrap` callback
     *
     * @public
     * @decorator `@bind`
     */
    bootstrap(): Promise<void>;
    /**
     * `registered` callback
     *
     * @public
     * @decorator `@bind`
     */
    registered(): Promise<void>;
    /**
     * Bind a synchronous facade for use in configs
     *
     * @public
     * @decorator `@bind`
     */
    bindFacade(name: string, fn: CallableFunction): void;
    /**
     * Call an api method directly
     *
     * @public
     * @decorator `@bind`
     */
    call(name: string, ...args: any[]): Promise<any>;
    /**
     * Execute all queued method calls
     *
     * @public
     * @decorator `@bind`
     */
    processQueue(): Promise<void>;
}
//# sourceMappingURL=service.d.ts.map