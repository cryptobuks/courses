import { isUndefined, omit } from '@roots/bud-support/lodash-es';
import { dirname, resolve } from 'path';
import { fileURLToPath } from 'url';
import BudHtmlWebpackPlugin from './html-webpack-plugin.extension.js';
import BudInterpolateHtmlPlugin from './interpolate-html-plugin.extension.js';
export const template = async function (userOptions) {
    const app = this;
    if (userOptions === false) {
        app.extensions.remove(`html-webpack-plugin`);
        app.extensions.remove(`interpolate-html-plugin`);
        return app;
    }
    let options = {
        template: resolve(dirname(fileURLToPath(import.meta.url)), `..`, `..`, `..`, `vendor`, `template.html`),
        replace: app.env.getPublicEnv(),
    };
    if (!isUndefined(userOptions) && userOptions !== true) {
        options = {
            ...options,
            ...userOptions,
            replace: {
                ...options.replace,
                ...userOptions.replace,
            },
        };
    }
    await app.extensions.add(BudHtmlWebpackPlugin);
    app.extensions
        .get(`html-webpack-plugin`)
        .setOptions(omit(options, `replace`));
    await app.extensions.add(BudInterpolateHtmlPlugin);
    app.extensions.get(`interpolate-html-plugin`).setOptions(options.replace);
    return app;
};
//# sourceMappingURL=index.js.map