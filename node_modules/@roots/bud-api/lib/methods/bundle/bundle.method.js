import { isRegExp, isString } from '@roots/bud-support/lodash-es';
import { join, sep } from 'node:path';
/**
 * Create a module chunk
 *
 * @example
 * Create an `alpine` chunk
 *
 * ```js
 * bud.bundle('alpine')
 * ```
 *
 * @public
 */
export const bundle = function (name, matcher) {
    const ctx = this;
    const test = normalize(matcher ?? name);
    ctx.hooks.on(`build.optimization.splitChunks`, splitChunks => {
        const template = ctx.hooks.filter(`feature.hash`)
            ? `[name].[contenthash].js`
            : `[name].js`;
        const filename = join(`js`, `bundle`, name, template);
        const existing = splitChunks ?? {
            chunks: `all`,
            automaticNameDelimiter: sep,
            minSize: 0,
        };
        const cacheGroups = existing?.cacheGroups ?? {};
        return {
            ...existing,
            cacheGroups: {
                ...cacheGroups,
                [name]: {
                    idHint: name,
                    filename,
                    test,
                    priority: -10,
                },
            },
        };
    });
    return ctx;
};
const normalize = (matcher) => {
    return isRegExp(matcher)
        ? matcher
        : isString(matcher)
            ? getTestRegExp([matcher])
            : getTestRegExp(matcher);
};
const getTestRegExp = (matcher) => new RegExp(`[\\/](${matcher.reduce((a, c) => `${a}|${c}`)})[\\/]`);
//# sourceMappingURL=bundle.method.js.map