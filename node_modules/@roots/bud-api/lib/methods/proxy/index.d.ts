import type { Bud } from '@roots/bud-framework/bud';
import type * as Server from '@roots/bud-framework/services/server';
/**
 * Enables proxy middleware
 *
 * @remarks
 * Callback for the `dev.middleware.enabled` hook
 * If proxy middleware is already enabled it will be removed before it is re-added
 *
 * @public
 */
export declare const enableMiddlewareHookCallback: (middleware: Array<keyof Server.Middleware.Available>) => Array<keyof Server.Middleware.Available>;
/**
 * Disable proxy middleware
 *
 * @remarks
 * Callback for the `dev.middleware.enabled` hook
 * If proxy middleware is already enabled it will be removed before it is re-added
 *
 * @public
 */
export declare const disableMiddlewareHookCallback: (middleware: Array<keyof Server.Middleware.Available>) => Array<keyof Server.Middleware.Available>;
/**
 * bud.proxy interface
 *
 * @public
 */
export interface method {
    (input?: URL | string | boolean | number, replacements?: (input: Array<[string | RegExp, string]>) => Array<[string | RegExp, string]>): Bud;
}
/**
 * bud.proxy sync facade interface
 *
 * @public
 */
export declare type facade = method;
/**
 * bud.proxy method
 *
 * @public
 */
export declare const method: method;
//# sourceMappingURL=index.d.ts.map