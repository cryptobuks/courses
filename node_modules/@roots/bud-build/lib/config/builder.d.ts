import type { Bud } from '@roots/bud-framework';
import type { Configuration } from 'webpack';
export { bail } from './bail.js';
export { cache } from './cache.js';
export { context } from './context.js';
export { experiments } from './experiments.js';
export { infrastructureLogging } from './infrastructureLogging.js';
export { module } from './module.js';
export { optimization } from './optimization.js';
export { output } from './output.js';
export { resolve } from './resolve.js';
export interface ValueFactory<T extends keyof B, B = Configuration> {
    (app: Bud): Promise<B[T]>;
}
export declare const entry: ValueFactory<`entry`>;
export declare const externals: ValueFactory<`externals`>;
export declare const externalsType: ValueFactory<`externalsType`>;
export declare const loader: ValueFactory<`loader`>;
export declare const mode: ValueFactory<`mode`>;
export declare const name: ValueFactory<`name`>;
export declare const node: ValueFactory<`node`>;
export declare const parallelism: ValueFactory<`parallelism`>;
export declare const performance: ValueFactory<`performance`>;
export declare const plugins: ValueFactory<`plugins`>;
export declare const profile: ValueFactory<`profile`>;
export declare const recordsPath: ValueFactory<`recordsPath`>;
export declare const stats: ValueFactory<`stats`>;
export declare const target: ValueFactory<`target`>;
//# sourceMappingURL=builder.d.ts.map