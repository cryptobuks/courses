import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework';
import { bind, label, plugin, } from '@roots/bud-framework/extension/decorators';
import Webpack from 'webpack';
let BudDefine = class BudDefine extends Extension {
    async init() {
        if (!this.app.env.getPublicEnv())
            return;
        this.setOptions(Object.entries(this.app.env.getPublicEnv()).reduce((values, [key, value]) => ({
            ...values,
            [key]: JSON.stringify(value),
        }), {}));
    }
    /**
     * `when` callback
     *
     * @public
     * @decorator `@bind`
     */
    async when() {
        return this.options && Object.keys(this.options).length > 0;
    }
};
__decorate([
    bind
], BudDefine.prototype, "init", null);
__decorate([
    bind
], BudDefine.prototype, "when", null);
BudDefine = __decorate([
    label(`webpack:define-plugin`),
    plugin(Webpack.DefinePlugin)
], BudDefine);
export default BudDefine;
//# sourceMappingURL=index.js.map