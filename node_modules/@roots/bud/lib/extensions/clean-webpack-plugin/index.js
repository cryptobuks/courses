import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { label, options, plugin, when, } from '@roots/bud-framework/extension/decorators';
import { CleanWebpackPlugin, } from 'clean-webpack-plugin';
/**
 * `clean-webpack-plugin` adapter
 *
 * @public
 * @decorator `@label`
 * @decorator `@plugin`
 * @decorator `@options`
 * @decorator `@when`
 */
let BudClean = class BudClean extends Extension {
};
BudClean = __decorate([
    label(`clean-webpack-plugin`),
    plugin(CleanWebpackPlugin),
    options({
        /**
         * Clean stale assets
         *
         * @public
         */
        cleanStaleWebpackAssets: true,
        /**
         * Protect webpack assets from accidental deletion
         *
         * @public
         */
        protectWebpackAssets: true,
        /**
         * Clean before path patterns
         *
         * @public
         */
        cleanOnceBeforeBuildPatterns: [`**/*`],
    }),
    when(async ({ hooks, isProduction }) => hooks.filter(`feature.clean`) && isProduction)
], BudClean);
export default BudClean;
//# sourceMappingURL=index.js.map