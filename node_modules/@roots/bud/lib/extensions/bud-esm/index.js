import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, expose, label, } from '@roots/bud-framework/extension/decorators';
/**
 * Extension enabling ESM compilation output
 *
 * @public
 * @decorator `@label`
 * @decorator `@expose`
 */
let Esm = class Esm extends Extension {
    /**
     * `buildBefore` callback
     *
     * @public
     * @decorator `@bind`
     */
    async buildBefore() {
        this.app.hooks.fromMap({
            'build.experiments': experiments => ({
                ...(experiments ?? {}),
                outputModule: true,
            }),
            'build.output.module': true,
        });
        this.app.context.manifest?.imports &&
            this.app.externals(this.app.context.manifest.imports);
    }
    /**
     * `when` callback
     *
     * @public
     * @decorator `@bind`
     */
    async when() {
        return false;
    }
};
__decorate([
    bind
], Esm.prototype, "buildBefore", null);
__decorate([
    bind
], Esm.prototype, "when", null);
Esm = __decorate([
    label(`esm`),
    expose(`esm`)
], Esm);
export default Esm;
//# sourceMappingURL=index.js.map