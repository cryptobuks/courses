import { __decorate } from "tslib";
import { bind } from '@roots/bud-support/decorators';
import * as fs from '@roots/bud-support/fs';
import { dirname, join, resolve, sep } from 'node:path/posix';
import { fileURLToPath } from 'node:url';
/**
 * Application context
 *
 * @public
 */
export default class Bud {
    constructor() {
        this.data = {
            label: null,
            basedir: null,
            version: null,
            manifestPath: null,
        };
    }
    /**
     * Find application manifest
     *
     * @public
     */
    async find() {
        const resolvedPath = dirname(fileURLToPath(import.meta.url));
        this.data.manifestPath = resolve(join(resolvedPath, `..`, `..`, `package.json`));
        this.data.basedir = dirname(resolve(this.data.manifestPath));
        await this.handleFindResults(this.data.manifestPath);
        return this;
    }
    /**
     * Handle file results
     *
     * @public
     */
    async handleFindResults(path) {
        const manifest = await fs.readJson(path);
        this.data.label = manifest.name.split(sep).pop();
        this.data.version = manifest.version;
        return this;
    }
}
__decorate([
    bind
], Bud.prototype, "find", null);
__decorate([
    bind
], Bud.prototype, "handleFindResults", null);
//# sourceMappingURL=bud.js.map