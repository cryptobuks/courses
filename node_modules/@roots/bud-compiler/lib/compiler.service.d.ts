import { Service } from '@roots/bud-framework/service';
import type { Compiler as Contract } from '@roots/bud-framework/services';
import type { MultiCompiler, MultiStats, WebpackError } from 'webpack';
/**
 * Wepback compilation controller class
 *
 * @public
 */
export declare class Compiler extends Service implements Contract.Service {
    /**
     * Service label
     *
     * @public
     */
    static label: string;
    /**
     * Compiler implementation
     *
     * @public
     */
    implementation: Contract.Service[`implementation`];
    /**
     * Compiler instance
     *
     * @public
     */
    instance: Contract.Service[`instance`];
    /**
     * Compilation stats
     *
     * @public
     */
    stats: Contract.Service[`stats`];
    /**
     * Configuration
     *
     * @public
     */
    config: Contract.Service[`config`];
    /**
     * Initiates compilation
     *
     * @returns the compiler instance
     *
     * @public
     * @decorator `@bind`
     * @decorator `@once`
     */
    compile(): Promise<MultiCompiler>;
    /**
     * Webpack callback
     *
     * @public
     * @decorator `@bind`
     * @decorator `@once`
     */
    callback(error: Error, stats: MultiStats): void;
    /**
     * Stats handler
     *
     * @public
     * @decorator `@bind`
     */
    handleStats(stats: MultiStats): void;
    /**
     * Compiler close event
     *
     * @public
     * @decorator `@bind`
     */
    onClose(error?: WebpackError): void;
    /**
     * Compiler error event
     *
     * @public
     * @decorator `@bind`
     */
    onError(error: Error): void;
}
//# sourceMappingURL=compiler.service.d.ts.map