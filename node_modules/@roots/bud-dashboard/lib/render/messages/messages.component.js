import { Box, Text } from '@roots/bud-support/ink';
import React from '@roots/bud-support/react';
import chalk from 'chalk';
import { formatMessage } from 'webpack-format-messages';
import { VERT } from '../format.js';
const Messages = ({ figure, type, messages, color, }) => {
    const formatted = messages?.map(formatMessage)?.map((message) => message
        .split(`\n`)
        .filter(ln => !ln.includes(`ModuleBuildError:`))
        .map(ln => `${chalk.dim(VERT)} ${ln
        .replace(process.cwd(), `.`)
        .replace(/^\t/g, ``)}`)
        .join(`\n`));
    if (!formatted)
        return null;
    return (React.createElement(Box, { flexDirection: "column" }, formatted?.map((msg, index) => (React.createElement(Box, { key: index, flexDirection: "column" },
        React.createElement(Box, { flexDirection: "row" },
            React.createElement(Text, { dimColor: true }, "\u251C\u2500"),
            React.createElement(Text, null, ` `),
            React.createElement(Text, { color: color }, figure),
            React.createElement(Text, null, ` `),
            React.createElement(Text, { color: color }, type)),
        React.createElement(Box, { flexDirection: "column" },
            React.createElement(Text, null, msg.trim()),
            React.createElement(Text, { dimColor: true }, chalk.dim(VERT))))))));
};
export default Messages;
//# sourceMappingURL=messages.component.js.map