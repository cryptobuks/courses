import Webpack from 'webpack';
import type { Entry } from './webpack.plugin.js';
/**
 * Emits inline html for each entrypoint
 *
 * @param compilation - Webpack compilation instance
 * @param publicPath - public path for assets
 */
export declare class HtmlEmitter {
    compilation: Webpack.Compilation;
    assets: Entry;
    publicPath: string;
    /**
     * Class constructor
     *
     * @param compilation - webpack compilation
     * @param publicPath - asset publicPath
     *
     * @public
     */
    constructor(compilation: Webpack.Compilation, assets: Entry, publicPath: string);
    /**
     * Get compiled asset file contents
     *
     * @param file - asset file
     * @returns - asset file contents
     *
     * @public
     * @decorator `@bind`
     */
    getCompiledAsset(file: string): string;
    /**
     * Reduce an entrypoint entry to markup
     *
     * @public
     * @decorator `@bind`
     */
    entrypointsReducer(acc: string, [type, files]: [string, Array<string>]): string;
    /**
     * Reduce a stylesheet from entry item to markup
     *
     * @public
     * @decorator `@bind`
     */
    styleReducer(acc: string, file: string): string;
    /**
     * Reduce a script from entry item to markup
     *
     * @public
     * @decorator `@bind`
     */
    scriptReducer(acc: string, src: string): string;
    /**
     * Reduce a js filename to markup
     *
     * @public
     * @decorator `@bind`
     */
    makeScript(attributes: Record<string, boolean | string>, inner?: string): string;
    /**
     * Reduce entrypoint assets to markup
     *
     * @public
     * @decorator `@bind`
     */
    emit(): void;
}
//# sourceMappingURL=html.emitter.d.ts.map