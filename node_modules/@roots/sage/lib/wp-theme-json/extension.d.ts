import { Extension } from '@roots/bud-framework';
import type { GlobalSettingsAndStyles as WPThemeJson } from '@roots/bud-preset-wordpress/theme';
import Container from '@roots/container';
import { Options, ThemeJsonWebpackPlugin } from './plugin.js';
/**
 * Callback function used to configure wordpress `theme.json`
 *
 * @public
 */
export interface Mutator {
    (json: Partial<WPThemeJson['settings']> | Container<Partial<WPThemeJson['settings']>>): Partial<WPThemeJson['settings']> | Container<Partial<WPThemeJson['settings']>>;
}
/**
 * WP Theme JSON plugin adapter
 *
 * @remarks
 * Produces a WordPress `theme.json`
 *
 * @example
 * ```ts
 * bud.themeJson(theme =>
 *   theme.set('color', {})
 * )
 * ```
 *
 * @public
 * @decorator `@label`
 * @decorator `@options`
 * @decorator `@when`
 * @decorator `@plugin`
 * @decorator `@expose`
 */
export default class ThemeJson extends Extension<Options, ThemeJsonWebpackPlugin> {
    settings(input?: Mutator | Container<Partial<WPThemeJson['settings']>> | Partial<WPThemeJson['settings']> | boolean, raw?: boolean): this;
    useTailwindColors(extendOnly?: boolean): this;
    useTailwindFontFamily(extendOnly?: boolean): this;
    useTailwindFontSize(extendOnly?: boolean): this;
}
//# sourceMappingURL=extension.d.ts.map