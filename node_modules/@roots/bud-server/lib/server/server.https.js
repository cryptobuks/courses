import { __decorate } from "tslib";
import { bind } from '@roots/bud-support/decorators';
import { createServer } from 'https';
import { BaseServer } from './server.base.js';
/**
 * HTTPS Server
 * @public
 */
export class Https extends BaseServer {
    constructor() {
        super(...arguments);
        /**
         * Https protocol
         * @public
         */
        this.protocol = `https:`;
    }
    /**
     * Has options
     * @returns boolean
     * @public
     * @decorator `@bind`
     */
    hasOptions() {
        return this.options && Object.keys(this.options).length > 0;
    }
    /**
     * Create HTTPS server
     * @public
     * @decorator `@bind`
     */
    async createServer(express) {
        if (!this.hasOptions()) {
            this.instance = createServer(express);
            return this.instance;
        }
        this.instance = createServer(this.options, express);
        return this.instance;
    }
}
__decorate([
    bind
], Https.prototype, "hasOptions", null);
__decorate([
    bind
], Https.prototype, "createServer", null);
