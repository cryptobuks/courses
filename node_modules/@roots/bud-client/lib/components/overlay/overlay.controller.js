"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Controller = void 0;
const strip_ansi_1 = __importDefault(require("strip-ansi"));
/**
 * Overlay controller
 * @public
 */
class Controller {
    /**
     * Class constructor
     *
     * @public
     */
    constructor() {
        this.update = this.update.bind(this);
        this.element = document.createElement(`bud-error`);
    }
    /**
     * Formatted error message
     * @public
     */
    get message() {
        var _a;
        return (_a = this.payload.errors) === null || _a === void 0 ? void 0 : _a.reduce((a, c) => {
            var _a;
            return `${a}
        <div>
          <pre>${(_a = (0, strip_ansi_1.default)(c === null || c === void 0 ? void 0 : c.message)) !== null && _a !== void 0 ? _a : ``}</pre>
        </div>`;
        }, ``);
    }
    /**
     * Append `bud-error` element to the DOM
     *
     * @public
     */
    createError() {
        var _a;
        !document.body.querySelector(`bud-error`) &&
            ((_a = document.body) === null || _a === void 0 ? void 0 : _a.appendChild(this.element));
    }
    /**
     * Remove `bud-error` element from the DOM (if present)
     *
     * @public
     */
    removeError() {
        var _a;
        (_a = document.body.querySelector(`bud-error`)) === null || _a === void 0 ? void 0 : _a.remove();
    }
    /**
     * Update DOM
     *
     * @public
     */
    update(payload) {
        var _a, _b;
        this.payload = payload;
        this.element.setAttribute(`message`, (_a = this.message) !== null && _a !== void 0 ? _a : ``);
        if (((_b = this.payload.errors) === null || _b === void 0 ? void 0 : _b.length) > 0) {
            return this.createError();
        }
        this.removeError();
    }
}
exports.Controller = Controller;
